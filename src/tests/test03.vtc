varnishtest "awsrest"

server s1 {
	rxreq
	expect req.http.e1  == "/?a=b=c"
	expect req.http.e2  == "/&a"
	expect req.http.e3  == "/"
	expect req.http.e4  == "/aa/"
	expect req.http.e5  == "/aa"
	expect req.http.e6  == "/?=&a="
	expect req.http.e7  == "/?=&=&a="
	expect req.http.e8  == ""
	expect req.http.e9  == "/?a==123"
	expect req.http.e10 == ""
	expect req.http.e11 == "?a=1&b=&c="

	expect req.http.x1  == "/?a="
	expect req.http.x2  == "/?a=&b="
	expect req.http.x3  == "/?a="
	expect req.http.x4  == "/?a=123"
	expect req.http.x5  == "/?a=123"
	expect req.http.x6  == "/?a=&b="
	expect req.http.x7  == "/?a=foo&b=bar&c=&d=&e=&e=mage"
	expect req.http.x8  == "/?a="
	expect req.url      == "/?aa=&bb=&cc="
	txresp
} -start

varnish v1 -vcl+backend {
	import ${vmod_awsrest};

	sub vcl_recv {
		set req.http.e1  = awsrest.formurl("/?a=b=c");
		set req.http.e2  = awsrest.formurl("/&a");
		set req.http.e3  = awsrest.formurl("/?&");
		set req.http.e4  = awsrest.formurl("/aa/?&&&");
		set req.http.e5  = awsrest.formurl("/aa?&&&");
		set req.http.e6  = awsrest.formurl("/?&a?");
		set req.http.e7  = awsrest.formurl("/?&&a?");
		set req.http.e8  = awsrest.formurl("");
		set req.http.e9  = awsrest.formurl("/?a==123");
		set req.http.e10 = awsrest.formurl("?");
		set req.http.e11 = awsrest.formurl("?a=1&b&c&");

		set req.http.x1  = awsrest.formurl("/?a");
		set req.http.x2  = awsrest.formurl("/?a&b");
		set req.http.x3  = awsrest.formurl("/?a=");
		set req.http.x4  = awsrest.formurl("/?a=123&");
		set req.http.x5  = awsrest.formurl("/?a=123?");
		set req.http.x6  = awsrest.formurl("/?a=&b=");
		set req.http.x7  = awsrest.formurl("/?a=foo&b=bar&c&d=&e&e=mage");
		set req.http.x8  = awsrest.formurl("/?a&&&");
		set req.url      = awsrest.formurl(req.url);
	}
} -start

client c1 {
	txreq -url "/?aa&bb&cc"
	rxresp
}

client c1 -run
